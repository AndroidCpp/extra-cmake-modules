set(BINARY_DIR "@CMAKE_CURRENT_BINARY_DIR@")
set(ACTUAL_TREE "@CMAKE_INSTALL_PREFIX@")
set(QMLOADER_PATH "@QMLOADER_PATH@")

set(fail OFF)

macro(mark_failed msg)
    message(WARNING "FAIL: ${msg}")
    set(fail ON)
endmacro()

macro(check_strequal var expected)
    if (NOT "${${var}}" STREQUAL "${expected}")
        mark_failed("${var} is:\n  \"${${var}}\"\nExpected:\n  \"${expected}\"")
    endif()
endmacro()

macro(check_exists file)
    if (NOT EXISTS ${file})
        mark_failed("File \"${file}\" does not exist")
    endif()
endmacro()

check_exists(${BINARY_DIR}/ECMQmLoader.cpp)
check_strequal(QMLOADER_PATH "${BINARY_DIR}/ECMQmLoader.cpp")

set(exp_files 
    "share/locale/fr/LC_MESSAGES/test.qm"
    "share/locale/fr/LC_MESSAGES/install-test.qm"
    "share/locale/es/LC_MESSAGES/install-test.qm"
)
file(GLOB_RECURSE actual_files RELATIVE "${ACTUAL_TREE}" "${ACTUAL_TREE}/*")
list(SORT exp_files)
list(SORT actual_files)

if(NOT exp_files STREQUAL actual_files)
    foreach(f ${exp_files})
        list(FIND actual_files "${f}" result)
        if(result EQUAL -1)
            message(WARNING "${f} was expected, but not found")
            set(fail ON)
        endif()
    endforeach()
    foreach(f ${actual_files})
        list(FIND exp_files "${f}" result)
        if(result EQUAL -1)
            message(WARNING "${f} was found, but not expected")
            set(fail ON)
        endif()
    endforeach()
endif()

if (fail)
    message("Test failed!")
endif()
